<?xml version="1.0" encoding="UTF-8"?>
<!--
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Â© 2011-2022 Telenav, Inc.
// Licensed under Apache License, Version 2.0
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->

<project
    xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
    xmlns = "http://maven.apache.org/POM/4.0.0"
    xsi:schemaLocation = "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    
    <parent>
        <groupId>com.telenav</groupId>
        <artifactId>telenav-root-superpom</artifactId>
        <version>1.0.0</version>
        <relativePath>../telenav-root-superpom</relativePath>
    </parent>

    <artifactId>telenav-superpom-project-family</artifactId>
    <version>2.0.0</version>

    <packaging>pom</packaging>
    <name>telenav-superpom-project-family</name>
    <description>
        Provides the release profile that runs lexakai when building kivakit, kivakit-stuff, mesakit, etc,
        so that you simply add `--activateProfiles release` when building to automatically build lexakai
        documentation.
    </description>

    <properties>
        <cactus.maven.plugin.version>1.4.25</cactus.maven.plugin.version>
        <cactus.maven.plugin.prev.version>1.4.24</cactus.maven.plugin.prev.version>
        <!-- Version range for cactus - the bump-version will automatically update will
        automatically update the above two properties, and we use this in a
        dependencyManagement section, which allows plugin resolution to pick it up 
        (you can't use a verison range directly in a plugin block)-->
        <cactus.maven.plugin.verbose>false</cactus.maven.plugin.verbose>
        <cactus.maven.plugin.versions>[${cactus.maven.plugin.prev.version}, ${cactus.maven.plugin.version}]</cactus.maven.plugin.versions>
        <do.not.publish>false</do.not.publish>
        <release.on.close>false</release.on.close>
        <mastfrog.version>2.8.3</mastfrog.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- stupid maven tricks - we can't use a range dependency in
                a plugin block, but we can do it here, omit it from the
                block in pluginManagement, and it will be used to resolve 
                the plugin. -->
                <groupId>com.telenav.cactus</groupId>
                <artifactId>cactus-maven-plugin</artifactId>
                <version>${cactus.maven.plugin.versions}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <!-- Mostly automated release profiles -->

        <profile>
            <id>release-phase-1</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <maven.test.skip.exec>true</maven.test.skip.exec>
            </properties>
            <build>
                <plugins>

                    <plugin>
                        <groupId>com.telenav.cactus</groupId>
                        <artifactId>cactus-maven-plugin</artifactId>
                        <version>1.4.24</version>
                        <configuration>
                            <scope>family</scope>
                            <verbose>true</verbose>
                            <includeRoot>true</includeRoot>
                            <tolerateVersionInconsistenciesIn>lexakai</tolerateVersionInconsistenciesIn>
                            <properties>maven.deploy.skip,cactus.copy.javadoc.skip,cactus.lexakai.skip,cactus.generate.lexakai.skip,cactus.publish.check.skip,maven.javadoc.skip,skipNexusStagingDeployMojo</properties>
                        </configuration>
                        <executions>

                            <execution>
                                <id>filter-families-from-plugins-1</id>
                                <goals>
                                    <goal>filter-families</goal>
                                </goals>
                            </execution>

                            <execution>
                                <id>consistency-check</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <checkDirty>false</checkDirty>
                                    <!-- fixme -->
                                    <checkRemoteModifications>false</checkRemoteModifications>
                                </configuration>
                            </execution>

                            <execution>
                                <id>bump-versions-of-famlies</id>
                                <goals>
                                    <goal>bump-version</goal>
                                </goals>
                                <configuration>
                                    <scope>family</scope>
                                    <bumpUnpublished>true</bumpUnpublished>
                                    <commitChanges>true</commitChanges>
                                    <commitMessage>Prepare for release</commitMessage>
                                    <versionFlavor>to-release</versionFlavor>
                                    <createReleaseBranch>true</createReleaseBranch>
                                </configuration>
                            </execution>

                            <execution>
                                <goals>
                                    <goal>print-message</goal>
                                </goals>
                                <configuration>
                                    <message>
                                        Versions have been bumped and family checkouts are now on a new release branch.
                                        Review the changes, and when you're ready, rebuild your
                                        superpoms - e.g.

                                        `mvn -f telenav-superpoms/pom.xml install`

                                        and you are ready for phase 2, building documentation:

                                        `mvn -P release-phase-2 install site`

                                        to build documentation and generate signed code, source and javadoc jars.
                                    </message>
                                </configuration>
                            </execution>

                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>

        <profile>
            <id>release-phase-2</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>

                    <plugin>
                        <groupId>com.telenav.cactus</groupId>
                        <artifactId>cactus-maven-plugin</artifactId>
                        <version>${cactus.maven.plugin.version}</version>
                        <configuration>
                            <scope>family</scope>
                            <verbose>true</verbose>
                            <includeRoot>true</includeRoot>
                            <tolerateVersionInconsistenciesIn>lexakai</tolerateVersionInconsistenciesIn>
                            <properties>maven.deploy.skip,cactus.copy.javadoc.skip,cactus.lexakai.skip,cactus.generate.lexakai.skip,cactus.publish.check.skip,maven.javadoc.skip,skipNexusStagingDeployMojo</properties>
                        </configuration>

                        <executions>

                            <execution>
                                <id>filter-families-from-plugins</id>
                                <goals>
                                    <goal>filter-families</goal>
                                </goals>
                            </execution>
                            
                            <execution>
                                <!-- Generate magic lexakai files from data in the pom  -->
                                <id>generate-lexakai-properties-files</id>
                                <goals>
                                    <goal>lexakai-generate</goal>
                                </goals>
                            </execution>

                            <execution>
                                <id>generate-codeflowers</id>
                                <goals>
                                    <goal>codeflowers</goal>
                                </goals>
                                <phase>install</phase>
                                <configuration>
                                    <cactus.tolerate.version.inconsistencies.families>lexakai</cactus.tolerate.version.inconsistencies.families>
                                </configuration>
                            </execution>

                            <execution>
                                <id>generate-lexakai-docs</id>
                                <goals>
                                    <goal>lexakai</goal>
                                </goals>
                                <phase>install</phase>
                            </execution>

                            <execution>
                                <id>copy-javadoc-to-assets-dir</id>
                                <goals>
                                    <goal>copy-javadoc</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>

                            <execution>
                                <id>copy-agg-javadoc-to-assets-dir</id>
                                <goals>
                                    <goal>copy-aggregated-javadoc</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>

                            <execution>
                                <id>print-phase-two-message</id>
                                <goals>
                                    <goal>print-message</goal>
                                </goals>
                                <phase>install</phase>
                                <configuration>
                                    <message>
                                        Documentation has been generated and READMEs have been updated.

                                        REVIEW THE DOCUMENTATION NOW.

                                        When you are happy with the results, run phase 3 to commit the
                                        changes and prepare the release:

                                        `mvn -P release-phase-3 clean install`

                                    </message>
                                </configuration>
                            </execution>

                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${maven-javadoc-plugin.version}</version>
                        <executions>

                            <execution>
                                <id>generate-javadoc</id>
                                <goals>
                                    <goal>javadoc-no-fork</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>

                            <execution>
                                <id>generate-aggregate-javadoc</id>
                                <goals>
                                    <goal>aggregate-no-fork</goal>
                                </goals>
                                <phase>install</phase>
                            </execution>

                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>

        <profile>
            <id>release-phase-3</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>

                    <plugin>
                        <groupId>com.telenav.cactus</groupId>
                        <artifactId>cactus-maven-plugin</artifactId>
                        <version>${cactus.maven.plugin.version}</version>
                        <configuration>
                            <scope>family</scope>
                            <verbose>true</verbose>
                            <includeRoot>true</includeRoot>
                            <tolerateVersionInconsistenciesIn>lexakai</tolerateVersionInconsistenciesIn>
                            <properties>maven.deploy.skip,cactus.copy.javadoc.skip,cactus.lexakai.skip,cactus.generate.lexakai.skip,cactus.publish.check.skip,maven.javadoc.skip,skipNexusStagingDeployMojo</properties>
                        </configuration>
                        <executions>

                            <execution>
                                <id>filter-families-from-plugins-3</id>
                                <goals>
                                    <goal>filter-families</goal>
                                </goals>
                            </execution>

                            <execution>
                                <id>commit-doc-changes</id>
                                <goals>
                                    <goal>commit</goal>
                                </goals>
                                <phase>validate</phase>
                                <configuration>
                                    <push>${forRealz}</push>
                                    <scope>all-project-families</scope>
                                    <commitChanges>true</commitChanges>
                                    <includeRoot>true</includeRoot>
                                    <commitMessage>Commit docs for release</commitMessage>
                                </configuration>
                            </execution>

                            <execution>
                                <id>commit-asset-changes</id>
                                <goals>
                                    <goal>commit-assets</goal>
                                </goals>
                                <phase>validate</phase>
                                <configuration>
                                    <push>${forRealz}</push>
                                </configuration>
                            </execution>

                            <execution>
                                <id>check-already-published-version</id>
                                <goals>
                                    <goal>check-published</goal>
                                </goals>
                            </execution>

                            <execution>
                                <id>copy-javadoc-to-assets</id>
                                <goals>
                                    <goal>copy-aggregated-javadoc</goal>
                                </goals>
                            </execution>

                            <execution>
                                <id>print-phase-three-message</id>
                                <goals>
                                    <goal>print-message</goal>
                                </goals>
                                <phase>deploy</phase>
                                <configuration>
                                    <message>
                                        Documentation changes have been commited, and
                                        perhaps pushed? ${forRealz}.

                                        And if the build succeeded, artifacts have been
                                        uploaded to nexus.  Review, and release the repository
                                        if things look right.

                                        The next phase will merge your changes back to the
                                        development branch, and move all released families
                                        onto a new snapshot version.
                                    </message>
                                </configuration>
                            </execution>

                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${maven-javadoc-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>generate-javadoc</id>
                                <goals>
                                    <goal>javadoc-no-fork</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>generate-aggregate-javadoc</id>
                                <goals>
                                    <goal>aggregate-no-fork</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>generate-javadoc-jar</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>${maven-source-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>generate-source-jar</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>3.0.1</version>
                        <executions>

                            <execution>

                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <configuration>
                                    <gpgArguments>
                                        <arg>--pinentry-mode</arg>
                                        <arg>loopback</arg>
                                    </gpgArguments>
                                </configuration>
                                <goals>
                                    <goal>sign</goal>
                                </goals>

                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>${nexus-staging-maven-plugin.version}</version>
                        <configuration>
                            <skipLocalStaging>true</skipLocalStaging>
                            <skipStaging>${do.not.publish}</skipStaging>
                            <autoReleaseAfterClose>${release.on.close}</autoReleaseAfterClose>
                            <keepStagingRepositoryOnCloseRuleFailure>true</keepStagingRepositoryOnCloseRuleFailure>
                        </configuration>

                        <executions>
                            <execution>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                            </execution>
                        </executions>

                    </plugin>

                </plugins>
            </build>
        </profile>

        <profile>
            <id>release-phase-4</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.telenav.cactus</groupId>
                        <artifactId>cactus-maven-plugin</artifactId>
                        <version>${cactus.maven.plugin.version}</version>
                        <configuration>
                            <scope>family</scope>
                            <verbose>true</verbose>
                            <tolerateVersionInconsistenciesIn>lexakai</tolerateVersionInconsistenciesIn>
                            <push>${forRealz}</push>
                            <commitChanges>true</commitChanges>
                            <includeRoot>true</includeRoot>
                            <commitMessage>Commit docs for release</commitMessage>
                        </configuration>
                        <executions>
                            <execution>
                                <id>merge-release-into-develop</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>merge</goal>
                                </goals>
                                <configuration>
                                    <alsoMergeInto>release/current</alsoMergeInto>
                                    <tag>true</tag>
                                    <includeRoot>true</includeRoot>
                                </configuration>
                            </execution>

                            <execution>
                                <id>move-to-new-snapshot-version</id>
                                <goals>
                                    <goal>bump-version</goal>
                                </goals>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <commitChanges>true</commitChanges>
                                    <scope>family</scope>
                                    <includeRoot>true</includeRoot>
                                    <versionFlavor>to-snapshot</versionFlavor>
                                    <updateDocs>false</updateDocs>
                                </configuration>
                            </execution>
                            
                            <execution>
                                <id>commit-new-snapshots</id>
                                <goals>
                                    <goal>commit</goal>
                                </goals>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <commitMessage>Update to new snapshot version</commitMessage>
                                    <commitChanges>true</commitChanges>
                                    <scope>family</scope>
                                    <includeRoot>true</includeRoot>
                                    <versionFlavor>to-snapshot</versionFlavor>
                                    <updateDocs>false</updateDocs>
                                </configuration>
                            </execution>

                            <execution>
                                <id>push-new-snapshots</id>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <!-- for now -->
                                    <pretend>true</pretend>
                                </configuration>
                            </execution>

                            <execution>
                                <id>phase-4-message</id>
                                <goals>
                                    <goal>print-message</goal>
                                </goals>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <message>
                                        Assuming this build succeeded, you are now back on
                                        the development branch, with new snapshot versions of
                                        everything that was published locally and pushed to
                                        the git server.

                                        Congratulations!  You released a thing!
                                    </message>
                                </configuration>
                            </execution>

                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
